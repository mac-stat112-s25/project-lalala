---
title: "Merce L"
---


```{r}
library(tidyverse)
library(scales)
library(ggridges)
hltb <- read_csv("..//..//data//all-completions.csv")
games <- read_csv("..//..//data//games.csv")
metac <- read.csv("..//..//data//all_games.csv")
realgames <- games |>
  mutate(name = title) |>
  select(name, main_story, main_plus_extras, completionist, all_styles, type, platforms, genres)

palala <- metac |>
  inner_join(realgames) |>
  mutate(gaga = release_date) |>
  separate(gaga, c("semester", "year"), "(?<=[,])") |>
  mutate(release_year = str_replace(year, " ", "")) |>
  mutate(user_review = as.integer(user_review)) |>
  select(-summary, -platform, -semester, -year) 

USETHISONE <- palala[!duplicated(palala$name), ]
#same as elina's code but i use inner_join and drop_na to exclude NAs so that my categories work properly
```
```{r}
summary(USETHISONE)
summary(realgames)
metac |>
  inner_join(realgames) |>
  mutate(gaga = release_date) |>
  separate(gaga, c("semester", "year"), "(?<=[,])") |>
  mutate(release_year = str_replace(year, " ", "")) |>
  mutate(user_review = as.integer(user_review)) |> summary()
typeof(USETHISONE$main_story)
# i try to find some of the distributions here
```
```{r}
USETHISONE |>
  ggplot(aes(x = main_story)) +
  geom_histogram(binwidth = 1, color = "white") +
  scale_x_continuous(limits = c(0,50)) +
  labs(x="Main Story Length (Hours)", title="Distribution of Games Lengths (post-join and wrangling)")

realgames |>
  ggplot(aes(x = main_story)) +
  geom_histogram(binwidth = 1, color = "white") +
  scale_x_continuous(limits = c(0,50)) +
  labs(x="Main Story Length (Hours)", title="Distribution of Games Lengths (pre-join)")
realgames |>
 # filter(meta_score<=70) 
  arrange(desc(main_story))
USETHISONE |>
  filter(completionist < 200) |>
  ggplot(aes(x = completionist, y = meta_score)) +
  geom_point(size = 0.6) 
#checking what i removed in wrangling, and what we have for completionist
```

```{r}
withcats <- USETHISONE |>
  drop_na(main_story) |>
  mutate(main_cat = case_when(
    (main_story <=2) ~ "nothing",
    (main_story <= 4 & main_story >2) ~ "tiny",
    (main_story <= 10 & main_story >7) ~ "medium",
    (main_story < 14 & main_story > 10) ~ "long",
    (main_story < 25 & main_story >=14) ~ "huge",
    (main_story >= 25) ~ "epic",
    .default = "short"
  )) |>
    mutate(main_cat = fct_relevel(main_cat, c("nothing", "tiny", "short", "medium", "long", "huge", "epic"))) |>
  #creates time based categories, subjective and mostly based on strandard distribution quantiles
mutate(meta_cat = case_when(
    (meta_score <=40) ~ "shovelware",
    (meta_score <= 60 & meta_score >40) ~ "questionable",
    (meta_score < 70 & meta_score >60) ~ "mixed",
    (meta_score < 84 & meta_score > 78) ~ "great",
    (meta_score < 90 & meta_score >=84) ~ "beloved",
    (meta_score >= 90) ~ "legendary",
    .default = "good"
)) |>
    mutate(meta_cat = fct_relevel(meta_cat, c("shovelware", "questionable", "mixed", "good", "great", "beloved", "legendary")))
#creates score based categories, mostly subjective

withcats |>
  ggplot(aes(y = meta_score, x=main_cat)) +
  geom_boxplot() +
  labs(y="Critic Score", x="Main Story Length", title="Score Distribution by Length Categories")
withcats |>
  ggplot(aes(y = meta_score, x=main_cat)) +
  geom_violin() 
withcats |>
  ggplot(aes(x = meta_score)) +
  geom_histogram(binwidth = 3,color="white") +
  facet_wrap(~ main_cat)
withcats |>
  ggplot(aes(x = meta_score)) +
  geom_density(binwidth = 3) +
  facet_wrap(~ main_cat) +
  labs(x="Critic Score", title="Score Distribution by Length Categories")
#distribution graphs based on length categories vs scores


```
```{r}
withcats |>
#  filter(main_story<=75) |>
  ggplot(aes(y = main_story, x=meta_cat)) +
  geom_boxplot() +
  labs(x="Critic Evaluation", y="Main Story Length (Hours)", title="Length Distribution by Score Categories") +
  scale_y_continuous(limits = c(0,75))
withcats |>
  filter(main_story<=17) |>
  ggplot(aes(y = main_story, x=meta_cat)) +
  geom_violin() 


withcats |>
  filter(main_story<=25) |>
  ggplot(aes(x = main_story)) +
  geom_histogram(binwidth = 2, color="white") +
  facet_wrap(~ meta_cat)


withcats |>
#  filter(main_story<=25) |>
  ggplot(aes(x = main_story)) +
  geom_density(fill="gold", alpha=0.5) +
  facet_wrap(~ meta_cat) +
  scale_x_continuous(limits = c(0,25)) +
  labs(x="Main Story Length (Hours)", title="Length Distribution by Score Categories")
#distribution graphs based on length vs score categories
withcats |>
  filter(completionist>=40) |>
  filter(completionist<=200) |>
  ggplot(aes(x = completionist)) +
  geom_density() +
  facet_wrap(~ meta_cat)
#i check out how it compares for "all content completionist" times, within a certain range. there is a big range and so all this data has to be suited into a certain range to make any sense
```


```{r}
library(RColorBrewer)
USETHISONE |>
  filter(main_story < 25) |>
  ggplot(aes(x = main_story, y = meta_score)) +
  geom_density_2d_filled(alpha=0.5, bins=10) 
#first, we try a density plot, but thats like, frequency which means that the score groups overpower everything
USETHISONE |>
  #filter(meta_score < 60) |>
  filter(main_story < 50) |>
  ggplot(aes(main_story, meta_score )) +
  #geom_raster(aes(fill=density))
  geom_bin_2d( binwidth = c(0.5,1)) +
  scale_fill_distiller(palette="YlGnBu", name = "# Games") +
  labs(y="Critic Score", x="Main Story Length (Hours)", title="Score vs. Main Story Length")
#then we learn how to use geom_bin_2d with count which is really great. I tried this weird raster thing but it didn't really work
USETHISONE |>
  filter(completionist < 200) |>
  ggplot(aes(completionist, meta_score )) +
  geom_bin_2d( binwidth = c(2,1)) +
  scale_fill_distiller(palette="YlOrRd", name = "# Games") +
  labs(y="Critic Score", x="100% Completion Time (Hours)", title="Score vs. 100% Time")
USETHISONE |>
  filter(main_plus_extras < 75) |>
  ggplot(aes(main_plus_extras, meta_score )) +
  geom_bin_2d( binwidth = c(1,1)) +
  scale_fill_distiller(palette="YlOrRd", name = "# Games") +
  labs(y="Critic Score", x="Story and Side Content Length (Hours)", title="Score vs. Story + Extras Length")
#I then preceded to check it out with completion and "extra content" times, trying to fit the scale in such a way that the boxes wouldn't be stretched but would divide in weird places that would make the data look "speckled"
```
```

